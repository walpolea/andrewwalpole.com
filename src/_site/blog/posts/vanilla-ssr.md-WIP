---
layout: blog_base.njk
tags: 
  - post
title: Template
summary: Some words here
date: Created
permalink: "blog/{{page.fileSlug}}/index.html"
url: "blog/{{page.fileSlug}}/index.html"
hide: true
---

{{page.date | readableDate}}
# {{title}}

Web developers are commonly spread wide across a lot of specific, strange skills and technologies. Sometimes you can enter into something new and pick it up right away; it clicks and you're off to the races. But it's just as common, if not more, to just *not get it*; thing no clicky; I are dumb.

For me, one of those concepts was node-based Server-Side Rendering (SSR), especially through serverless platforms. I mean, I got pretty decent with PHP back in the day, *that clicked*! I even picked up writing local node utility scripts really quickly. But when it came to switching to these new-fangled SSR stacks and their template-loading and route-handling and content-injecting, it was just a bit too much for me to bite-off all at once.

The issue ended up being that it's not just *some JavaScript* doing it, it's usually an entire node server framework, plus some sort of templated content language and then a node-specific adapter on top of that to tell the server-thing how to render the content-thing. Too many things.

Look, it doesn't even all click for me now, but I'm well on my way, and to finally get to the point four paragraphs in, the thing that helped the most was to strip all those magical frameworks away and just build a vanilla SSR app. So let's do that!



